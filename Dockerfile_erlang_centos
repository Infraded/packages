# syntax = docker/dockerfile:1.2
ARG os
ARG os_version
FROM $os:$os_version as builder
ARG os
ARG os_version
ARG erlang_version
ADD yumdnf /usr/local/bin/

# Install dependencies
RUN --mount=type=cache,id=${os}_${os_version},target=/var/cache/dnf,sharing=private \
    --mount=type=cache,id=${os}_${os_version},target=/var/cache/yum,sharing=private \
    yumdnf install -y \
    autoconf \
    automake \
    bison \
    flex \
    gcc \
    gcc-c++ \
    git \
    java-11-openjdk-devel \
    lksctp-tools-devel \
    make \
    ncurses-devel \
    openssl \
    openssl-devel \
    unixODBC-devel \
    wget \
    zlib-devel

# Install FPM dependences
RUN --mount=type=cache,id=${os}_${os_version},target=/var/cache/dnf,sharing=private \
    --mount=type=cache,id=${os}_${os_version},target=/var/cache/yum,sharing=private \
    yumdnf install -y \
    ruby-devel \
    gcc \
    make \
    rpm-build \
    libffi-devel

# Install FPM
RUN if [ "${os}:${os_version}" = "centos:7" ]; then \
    gem install git --no-document --version 1.7.0; \
    fi
RUN gem install fpm --no-document --version 1.12.0

# Build it
WORKDIR /tmp/build
RUN wget --quiet https://github.com/erlang/otp/archive/OTP-${erlang_version}.tar.gz
RUN tar xf OTP-${erlang_version}.tar.gz
WORKDIR /tmp/build/otp-OTP-${erlang_version}
RUN if [ ! -f configure ]; then \
    ./otp_build autoconf; \
    fi
ENV CFLAGS="-g -O2 -fstack-protector-strong"
ENV LDFLAGS="-Wl,-z,relro"
RUN ./configure \
    --prefix=/usr \
    --enable-dirty-schedulers \
    --enable-dynamic-ssl-lib \
    --enable-kernel-poll \
    --enable-pie \
    --enable-sctp \
    --with-java \
    --with-ssl \
    --without-debugger \
    --without-et \
    --without-observer \
    --without-wx
RUN make -j2
RUN make docs DOC_TARGETS=chunks
RUN mkdir -p /tmp/install
RUN make DESTDIR=/tmp/install install
RUN make DESTDIR=/tmp/install install-docs DOC_TARGETS=chunks

# Package it
WORKDIR /tmp/output
RUN fpm -s dir -t rpm -n esl-erlang -v ${erlang_version} --iteration 1 \
    -C /tmp/install -p esl-erlang-VERSION-ITERATION-ARCH.rpm \
    --maintainer "Erlang Solutions Ltd <support@erlang-solutions.com>" \
    --category interpreters \
    --description "Concurrent, real-time, distributed functional language" \
    --url "https://erlang-solutions.com" \
    --provides erlang \
    .

# Test it
RUN rpm -i /tmp/output/esl-erlang-*.rpm
RUN erl -eval "ssl:start(), erlang:halt()."

# Export it
FROM scratch
COPY --from=builder /tmp/output /
