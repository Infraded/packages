name: Build and Publish Aptly Repositories

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Install required packages
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y aptly awscli

      # Retrieve .deb files from S3 bucket
      - name: Get deb files from S3
        id: get-deb-files
        uses: jakejarvis/s3-sync-action@v3
        with:
          args: --exclude "*" --include "*.deb"
          source: "s3://your-source-bucket"
          destination: "deb-files"

      # Create aptly repositories
      - name: Create aptly repositories
        run: |
          cd deb-files
          for debfile in $(ls *.deb); do
            debname=$(echo $debfile | cut -d '_' -f 1)
            version=$(echo $debfile | cut -d '_' -f 2 | cut -d '-' -f 1)
            if echo $debfile | grep -q ubuntu; then
              distribution=$(echo $debfile | cut -d '_' -f 3)
              aptly repo create -distribution=$distribution -component=main $debname-$version-$distribution
            elif echo $debfile | grep -q debian; then
              distribution=$(echo $debfile | cut -d '_' -f 4)
              aptly repo create -distribution=$distribution -component=main $debname-$version-$distribution
            fi
          done

      # Add packages to aptly repositories
      - name: Add packages to aptly repositories
        run: |
          cd deb-files
          for debfile in $(ls *.deb); do
            debname=$(echo $debfile | cut -d '_' -f 1)
            version=$(echo $debfile | cut -d '_' -f 2 | cut -d '-' -f 1)
            if echo $debfile | grep -q ubuntu; then
              distribution=$(echo $debfile | cut -d '_' -f 3)
              aptly repo add $debname-$version-$distribution $debfile
            elif echo $debfile | grep -q debian; then
              distribution=$(echo $debfile | cut -d '_' -f 4)
              aptly repo add $debname-$version-$distribution $debfile
            fi
          done

      # Publish aptly repositories to new S3 bucket
      - name: Publish aptly repositories to S3
        run: |
          aws s3 mb s3://your-destination-bucket
          cd deb-files
          for repo in $(aptly repo list -raw); do
            aptly publish repo -architectures=amd64 -skip-signing $repo s3:your-destination-bucket:/
          done
