# syntax = docker/dockerfile:1.2
ARG os
ARG os_version
FROM $os:$os_version as builder
ARG os
ARG os_version
ARG elixir_version
ARG elixir_iteration
ADD yumdnf /usr/local/bin/

# Setup ESL repo
RUN --mount=type=cache,id=${os}_${os_version},target=/var/cache/dnf,sharing=private \
    --mount=type=cache,id=${os}_${os_version},target=/var/cache/yum,sharing=private \
    yumdnf install -y \
    git \
    wget && \
    wget https://packages.erlang-solutions.com/erlang-solutions-2.0-1.noarch.rpm && \
    rpm -Uvh erlang-solutions-2.0-1.noarch.rpm

# Setup EPEL
RUN --mount=type=cache,id=${os}_${os_version},target=/var/cache/dnf,sharing=private \
    --mount=type=cache,id=${os}_${os_version},target=/var/cache/yum,sharing=private \
    yumdnf install -y epel-release

# Install Erlang/OTP
RUN --mount=type=cache,id=${os}_${os_version},target=/var/cache/dnf,sharing=private \
    --mount=type=cache,id=${os}_${os_version},target=/var/cache/yum,sharing=private \
    yumdnf install -y \
    esl-erlang

# Install FPM dependences
RUN --mount=type=cache,id=${os}_${os_version},target=/var/cache/dnf,sharing=private \
    --mount=type=cache,id=${os}_${os_version},target=/var/cache/yum,sharing=private \
    yumdnf install -y \
    ruby-devel \
    gcc \
    make \
    rpm-build \
    libffi-devel

# Install FPM
RUN if [ "${os}:${os_version}" = "centos:7" ]; then \
    gem install git --no-document --version 1.7.0; \
    fi
RUN gem install fpm --no-document --version 1.12.0

# Ensure UTF-8 locale
RUN --mount=type=cache,id=${os}_${os_version},target=/var/cache/dnf,sharing=private \
    --mount=type=cache,id=${os}_${os_version},target=/var/cache/yum,sharing=private \
    if [ "${os}:${os_version}" = "centos:8" ]; then \
    yumdnf install -y glibc-locale-source && \
    localedef -i en_US -f UTF-8 en_US.UTF-8; \
    fi
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US:en
ENV LC_ALL=en_US.UTF-8

# Build it
WORKDIR /tmp/build
RUN wget --quiet https://github.com/elixir-lang/elixir/archive/v${elixir_version}.tar.gz
RUN tar xf v${elixir_version}.tar.gz
RUN ls -lhR
WORKDIR /tmp/build/elixir-${elixir_version}
RUN make
RUN make test
RUN make install PREFIX=/usr DESTDIR=/tmp/install

# Package it
WORKDIR /tmp/output
RUN fpm -s dir -t rpm \
    --chdir /tmp/install \
    --name elixir \
    --version ${elixir_version} \
    --package-name-suffix ${os_version} \
    --epoch 1 \
    --iteration ${elixir_iteration} \
    --package elixir_VERSION_ITERATION~${os}~${os_version}_ARCH.rpm \
    --maintainer "Erlang Solutions Ltd <support@erlang-solutions.com>" \
    --description "Elixir functional meta-programming language" \
    --url "https://erlang-solutions.com" \
    --architecture "all" \
    .

# Export it
FROM scratch
COPY --from=builder /tmp/output /
